<?xml version="1.0"?>
<!-- #######################################    -->
<!--   GAZEBO ADDITIONAL DESCRIPTION OF THE DIFFERENTIAL DRIVE ROBOT    -->
<!--   Made by UCHENNA NNEJI                                            -->
<!--   See the license                                                  -->
<!--   This code is the ownership of Uchenna Nneji                      -->
<!--   ########################################################         -->
<robot>
<!--    Everything is described here    -->
<!--    http://classic.gazebosim.org/tutorials?tut=ros urdf&cat=connect_ros-->
<!--    mu1 and mu2 are friction coefficients -->

<gazebo reference="body_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
</gazebo>

<gazebo reference="wheel1_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Yellow</material>
</gazebo>

<gazebo reference="wheel2_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Yellow</material>
</gazebo>

<gazebo reference="caster_link">
    <mu1>0.000002</mu1>
    <mu2>0.000002</mu2>
    <material>Gazebo/Blue</material>
</gazebo>




<!--  Controller fr the differential drive robot   -->
<!--  The controller plugin is changed compared to the previous Gazebo version (Gazebo classic)-->
<!--  http://gazebosim.org/docs/harmonic/migrating_gazebo_classic_ros2_packages/#libgazebo-ros-differential-->
<!--  <wheel_torque> parameter can be realized by setting effort limitss on each  <joint> -->
<!--  That is, the wheel torques are adjusted by editing the robot.xcro files and -->
<!--  Under every joint, adjust <limit effort ="XXXX" velocity="XXXX"/>   -->

<gazebo>
<plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">

<!--   Wheels  -->
    <right_joint>wheel1_joint</right_joint>
    <left_joint>wheel2_joint</left_joint>

<!--   Kinematics  -->
    <wheel_sepeartion>${2*s4}</wheel_sepeartion>
    <wheel_diameter>${2*r}</wheel_diameter>

<!--  Limits  -->
    <max_linear_accelaration>10</max_linear_accelaration>

<!--  topic, frames,   and odometry -->
    <topic>cmd_vel</topic>
    <tf_topic>/tf</tf_topic>
    <odom_topic>odom</odom_topic>
    <frame_id>odom</frame_id>
    <child_frame_id>base_footprint</child_frame_id>
    <odom_publisher_frequency>30</odom_publisher_frequency>

</plugin>

<!--  Joint State Publisher   -->
<plugin filename="gz-sim-joint-state-publisher-system"
    name="gz::sim::systems::JointStatePublisher">
        <topic>joint_states</topic> <!-- from <ros><remapping>-->
        <joint_name>wheel1_joint</joint_name>
        <joint_name>wheel2_joint</joint_name>
</plugin>

</gazebo>

</robot>
